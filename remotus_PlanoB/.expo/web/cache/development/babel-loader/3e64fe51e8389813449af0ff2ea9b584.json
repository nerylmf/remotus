{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Breno\\\\dev\\\\Mobile\\\\remotus\\\\src\\\\index.tsx\";\nimport React, { useEffect } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { StatusBar } from 'expo-status-bar';\nimport AppLoading from 'expo-app-loading';\nimport * as Updates from 'expo-updates';\nimport { ThemeProvider } from 'styled-components';\nimport { useFonts, Inter_400Regular, Inter_500Medium, Inter_600SemiBold, Inter_700Bold } from '@expo-google-fonts/inter';\nimport { AppRoutes } from \"./routes\";\nimport theme from \"./global/styles/theme\";\nexport default function App() {\n  var _useFonts = useFonts({\n    Inter_400Regular: Inter_400Regular,\n    Inter_500Medium: Inter_500Medium,\n    Inter_600SemiBold: Inter_600SemiBold,\n    Inter_700Bold: Inter_700Bold\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsloaded = _useFonts2[0];\n\n  useEffect(function () {\n    Updates.addListener(function (listener) {\n      if (listener.type === Updates.UpdateEventType.UPDATE_AVAILABLE) {\n        Alert.alert('Nova atualização', 'Existe uma nova atualização disponivel, para continuar é necessário reiniciar o aparelho.', [{\n          text: 'Fazer isso depois',\n          onPress: function onPress() {\n            return console.log('Cancel Pressed');\n          },\n          style: 'cancel'\n        }, {\n          text: 'Reiniciar agora',\n          onPress: function onPress() {\n            return Updates.reloadAsync();\n          }\n        }], {\n          cancelable: false\n        });\n      }\n    });\n  }, []);\n\n  if (!fontsloaded) {\n    return React.createElement(AppLoading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return React.createElement(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), React.createElement(AppRoutes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/Breno/dev/Mobile/remotus/src/index.tsx"],"names":["React","useEffect","StatusBar","AppLoading","Updates","ThemeProvider","useFonts","Inter_400Regular","Inter_500Medium","Inter_600SemiBold","Inter_700Bold","AppRoutes","theme","App","fontsloaded","addListener","listener","type","UpdateEventType","UPDATE_AVAILABLE","Alert","alert","text","onPress","console","log","style","reloadAsync","cancelable"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,KAAKC,OAAZ,MAAyB,cAAzB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AAEA,SACEC,QADF,EAEEC,gBAFF,EAGEC,eAHF,EAIEC,iBAJF,EAKEC,aALF,QAMO,0BANP;AAQA,SAASC,SAAT;AACA,OAAOC,KAAP;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B,kBAAsBP,QAAQ,CAAC;AAC7BC,IAAAA,gBAAgB,EAAhBA,gBAD6B;AAE7BC,IAAAA,eAAe,EAAfA,eAF6B;AAG7BC,IAAAA,iBAAiB,EAAjBA,iBAH6B;AAI7BC,IAAAA,aAAa,EAAbA;AAJ6B,GAAD,CAA9B;AAAA;AAAA,MAAOI,WAAP;;AAOAb,EAAAA,SAAS,CAAC,YAAM;AACdG,IAAAA,OAAO,CAACW,WAAR,CAAoB,UAAAC,QAAQ,EAAI;AAC9B,UAAIA,QAAQ,CAACC,IAAT,KAAkBb,OAAO,CAACc,eAAR,CAAwBC,gBAA9C,EAAgE;AAC9DC,QAAAA,KAAK,CAACC,KAAN,CACE,kBADF,EAEE,2FAFF,EAGE,CACE;AACEC,UAAAA,IAAI,EAAE,mBADR;AAEEC,UAAAA,OAAO,EAAE;AAAA,mBAAMC,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAAN;AAAA,WAFX;AAGEC,UAAAA,KAAK,EAAE;AAHT,SADF,EAME;AAAEJ,UAAAA,IAAI,EAAE,iBAAR;AAA2BC,UAAAA,OAAO,EAAE;AAAA,mBAAMnB,OAAO,CAACuB,WAAR,EAAN;AAAA;AAApC,SANF,CAHF,EAWE;AAAEC,UAAAA,UAAU,EAAE;AAAd,SAXF;AAaD;AACF,KAhBD;AAiBD,GAlBQ,EAkBN,EAlBM,CAAT;;AAoBA,MAAI,CAACd,WAAL,EAAkB;AAChB,WAAO,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,SACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEF,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADF;AAMD","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Alert } from 'react-native';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport AppLoading from 'expo-app-loading';\r\nimport * as Updates from 'expo-updates';\r\nimport { ThemeProvider } from 'styled-components';\r\n\r\nimport {\r\n  useFonts,\r\n  Inter_400Regular,\r\n  Inter_500Medium,\r\n  Inter_600SemiBold,\r\n  Inter_700Bold,\r\n} from '@expo-google-fonts/inter';\r\n\r\nimport { AppRoutes } from './routes';\r\nimport theme from './global/styles/theme';\r\n\r\nexport default function App() {\r\n  const [fontsloaded] = useFonts({\r\n    Inter_400Regular,\r\n    Inter_500Medium,\r\n    Inter_600SemiBold,\r\n    Inter_700Bold,\r\n  });\r\n\r\n  useEffect(() => {\r\n    Updates.addListener(listener => {\r\n      if (listener.type === Updates.UpdateEventType.UPDATE_AVAILABLE) {\r\n        Alert.alert(\r\n          'Nova atualização',\r\n          'Existe uma nova atualização disponivel, para continuar é necessário reiniciar o aparelho.',\r\n          [\r\n            {\r\n              text: 'Fazer isso depois',\r\n              onPress: () => console.log('Cancel Pressed'),\r\n              style: 'cancel',\r\n            },\r\n            { text: 'Reiniciar agora', onPress: () => Updates.reloadAsync() },\r\n          ],\r\n          { cancelable: false },\r\n        );\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  if (!fontsloaded) {\r\n    return <AppLoading />;\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <StatusBar style=\"auto\" />\r\n        <AppRoutes />\r\n    </ThemeProvider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}