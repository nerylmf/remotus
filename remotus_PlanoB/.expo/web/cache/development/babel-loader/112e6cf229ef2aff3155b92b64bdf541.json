{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\Breno\\\\dev\\\\Mobile\\\\remotus\\\\src\\\\components\\\\Button\\\\index.tsx\";\nvar _excluded = [\"loading\", \"nameIcon\", \"title\", \"color\"];\nimport React from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { Container, Title, Icon } from \"./styles\";\nexport function Button(_ref) {\n  var loading = _ref.loading,\n      nameIcon = _ref.nameIcon,\n      title = _ref.title,\n      color = _ref.color,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  return React.createElement(Container, _extends({}, rest, {\n    color: color,\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }), loading ? React.createElement(ActivityIndicator, {\n    color: \"#fff\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }) : React.createElement(React.Fragment, null, React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, title), React.createElement(Icon, {\n    name: nameIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/Breno/dev/Mobile/remotus/src/components/Button/index.tsx"],"names":["React","Container","Title","Icon","Button","loading","nameIcon","title","color","rest"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,IAA3B;AAeA,OAAO,SAASC,MAAT,OAAqE;AAAA,MAAnDC,OAAmD,QAAnDA,OAAmD;AAAA,MAA1CC,QAA0C,QAA1CA,QAA0C;AAAA,MAAhCC,KAAgC,QAAhCA,KAAgC;AAAA,MAAzBC,KAAyB,QAAzBA,KAAyB;AAAA,MAAfC,IAAe;;AAC1E,SACE,oBAAC,SAAD,eAAeA,IAAf;AAAqB,IAAA,KAAK,EAAED,KAA5B;AAAmC,IAAA,OAAO,EAAEH,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGA,OAAO,GACN,oBAAC,iBAAD;AAAmB,IAAA,KAAK,EAAC,MAAzB;AAAgC,IAAA,IAAI,EAAC,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAGN,0CACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQE,KAAR,CADF,EAEE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAED,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAJJ,CADF;AAYD","sourcesContent":["import React from 'react';\r\nimport { ActivityIndicator } from 'react-native';\r\nimport { RectButtonProps } from 'react-native-gesture-handler';\r\nimport { Container, Title, Icon } from './styles';\r\n\r\ninterface props extends RectButtonProps {\r\n  loading?: boolean;\r\n  nameIcon?: string;\r\n  title: string;\r\n  color:\r\n  | 'primary'\r\n  | 'secondary'\r\n  | 'grey'\r\n  | 'success'\r\n  | 'warning'\r\n  | 'shape';\r\n}\r\n\r\nexport function Button({ loading, nameIcon, title, color, ...rest }: props) {\r\n  return (\r\n    <Container {...rest} color={color} loading={loading}>\r\n      {loading ? (\r\n        <ActivityIndicator color=\"#fff\" size=\"small\" />\r\n      ) : (\r\n        <>\r\n          <Title>{title}</Title>\r\n          <Icon name={nameIcon} />\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}